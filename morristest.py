import pandas as pd
from sklearn.datasets import load_boston
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.pipeline import Pipeline
from interpret.blackbox import MorrisSensitivity
import numpy as np
df = pd.read_csv(
    "https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data",
    header=None)
df.columns = [
    "Age", "WorkClass", "fnlwgt", "Education", "EducationNum",
    "MaritalStatus", "Occupation", "Relationship", "Race", "Gender",
    "CapitalGain", "CapitalLoss", "HoursPerWeek", "NativeCountry", "Income"
]
# df = df.sample(frac=0.01, random_state=1)
train_cols = df.columns[0:-1]
label = df.columns[-1]
X = df
y = df[label].apply(lambda x: 0 if x == " <=50K" else 1) #Turning response into 0 and 1

# We have to transform categorical variables to use sklearn models
X_enc = pd.get_dummies(X, prefix_sep='.')
seed = 1  
X_train, X_test, y_train, y_test = train_test_split(X_enc, y, test_size=0.20, random_state=seed)
#Blackbox system can include preprocessing, not just a classifier!
rf = RandomForestClassifier(n_estimators=100, n_jobs=-1)

blackbox_model = rf
blackbox_model.fit(X_train, y_train)

sensitivity = MorrisSensitivity(predict_fn=blackbox_model.predict_proba, data=X_train)
features=sensitivity.explain_global(name="Global Sensitivity").getFeatures()
print(features.keys())
feats= np.array(features['scores'])
print(feats)
# print(type(features['scores']))
# print(type(features["scores"]))