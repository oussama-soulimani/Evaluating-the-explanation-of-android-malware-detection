# This default renderer is used for sphinx docs only. Please delete this cell in IPython.
import plotly.io as pio
pio.renderers.default = "png"
import os
import sklearn
import xgboost
import numpy as np
import pandas as pd
from omnixai.data.tabular import Tabular
from omnixai.preprocessing.tabular import TabularTransform
from omnixai.explainers.tabular import MACEExplainer

feature_names = [
    "Age", "Workclass", "fnlwgt", "Education",
    "Education-Num", "Marital Status", "Occupation",
    "Relationship", "Race", "Sex", "Capital Gain",
    "Capital Loss", "Hours per week", "Country", "label"
]
data = np.genfromtxt(os.path.join('OmniXAI/tutorials/data', 'adult.data'), delimiter=', ', dtype=str)

print(data.shape)
tabular_data = Tabular(
    data,
    feature_columns=feature_names,
    categorical_columns=[feature_names[i] for i in [1, 3, 5, 6, 7, 8, 9, 13]],
    target_column='label'
)

np.random.seed(1)
transformer = TabularTransform().fit(tabular_data)
class_names = transformer.class_names
x = transformer.transform(tabular_data)
train, test, labels_train, labels_test = \
    sklearn.model_selection.train_test_split(x[:, :-1], x[:, -1], train_size=0.80)
# print('Training data shape: {}'.format(train.shape))
# print('Test data shape:     {}'.format(test.shape))

gbtree = xgboost.XGBClassifier(n_estimators=300, max_depth=5)
gbtree.fit(train, labels_train)
# print('Test accuracy: {}'.format(
#     sklearn.metrics.accuracy_score(labels_test, gbtree.predict(test))))

predict_function=lambda z: gbtree.predict_proba(transformer.transform(z))
explainer = MACEExplainer(
    training_data=tabular_data,
    predict_function=predict_function,
    ignored_features=["Sex", "Race", "Relationship", "Capital Loss"]
)


test_instances = tabular_data.remove_target_column()[0:5]

print(len(test_instances[0]))
explanations = explainer.explain(test_instances[0])
print(type(explanations))
# explanations.ipython_plot(index=1, class_names=class_names)
exp = explanations.get_explanations()
for i in exp:
    print("*************")
    print(type(i["query"]))
    print("=============")
    print(i["counterfactual"])
    print("*************")
    print()